@model List<DependientesModel>


<div class="org-wrapper">
    <div class="org-controls">
        <input type="text" id="buscarUsuario" placeholder="Buscar usuario..." />
        <div id="resultadoBusqueda" style="margin-top: 5px; color: crimson; display: none;"></div>
        <div id="navegadorBusqueda" style="display: none; margin-top: 5px;">
            <button onclick="OrgChart.buscarAnterior()">⬅️</button>
            <span id="contadorBusqueda">0 de 0</span>
            <button onclick="OrgChart.buscarSiguiente()">➡️</button>
        </div>




        <button onclick="OrgChart.centrar()">Centrar</button>
        <button onclick="OrgChart.zoomIn()">Maximizar</button>
        <button onclick="OrgChart.zoomOut()">Minimizar</button>
    </div>
    <div id="contenedorArbol" style="overflow: auto; width: 100%; height: 100%;">
        <div id="orgZoomContainer" data-scale="1">
            <div id="contenedorArbol"></div>
        </div>
    </div>

    @await Html.PartialAsync("_ModalNodos")
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const empleados = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));
            OrgChart.renderizarPorColumnas(empleados, document.getElementById("contenedorArbol"));
            OrgChart.centrar();
            OrgChart.inicializarModal(); // Inicializa el cierre del modal
        });

        document.getElementById("buscarUsuario").addEventListener("input", function() {
            OrgChart.buscarNodos(this.value);
        });
    </script>
}
