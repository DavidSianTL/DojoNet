@model IEnumerable<ProyectoDojoGeko.Models.RolesViewModel>
@{
    ViewData["Title"] = "Gestión de Roles - GEKO Sistemas de Seguridad";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    
    // Obtenemos los roles de la sesión
    var rolesString = Context.Session.GetString("Roles") ?? "";
    var userRoles = rolesString.Split(',').Where(r => !string.IsNullOrEmpty(r)).ToList();
    
    // Verificamos permisos basados en roles
    bool puedeHacerTodo = userRoles.Contains("SuperAdministrador");
    bool puedeCrear = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEditar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEliminar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador" }.Contains(r));
    bool soloLectura = userRoles.All(r => r == "Visualizador");
}

<!-- CSS específico para roles -->
<link rel="stylesheet" href="~/css/Rol.css" />

<div class="empresas-container">
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title">
                <i class="fas fa-user-tag"></i>
                Gestión de Roles
            </h1>
            <p class="page-subtitle">
                Administra los roles disponibles en el sistema
            </p>
        </div>
        <div class="header-actions">
            <div class="search-container">
                <i class="fas fa-search"></i>
                <input type="text" id="searchInput" placeholder="Buscar Roles..." class="search-input">
            </div>
            <!-- <a href="@Url.Action("Crear", "Roles")" class="btn-create">
                <i class="fas fa-plus"></i>
                <span>Nuevo Rol</span>
            </a> -->
        </div>
    </div>

    <div class="filters-stats">
        <div class="stats-cards">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-building"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@Model.Count()</div>
                    <div class="stat-label">Total Permisos</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon active">
                    <i class="fas fa-toggle-on"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@Model.Count(e => e.FK_IdEstado == 1)</div>
                    <div class="stat-label">Permisos Activos</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon inactive">
                    <i class="fas fa-toggle-off"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@Model.Count(e => e.FK_IdEstado == 4)</div>
                    <div class="stat-label">Permisos Inactivos</div>
                </div>
            </div>
        </div>

    <!-- Filtros 
    <div class="filters-stats">
        <div class="filters">
            <div class="filter-group">
                <label for="estadoFilter">Estado:</label>
                <select id="estadoFilter" class="filter-select">
                    <option value="todos">Todos</option>
                    <option value="activos">Activos</option>
                    <option value="inactivos">Inactivos</option>
                </select>
            </div>
            <button id="resetFilters" class="btn-reset-filters">
                <i class="fas fa-sync-alt"></i>
                Reiniciar Filtros
            </button>
        </div>
    </div>
        -->
    <div class="table-container">
        <table class="empresas-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre del Rol</th>
                    <th>Estado</th>
                        <!-- <th>Acciones</th>-->
                </tr>
            </thead>
            <tbody>
                @foreach (var rol in Model)
                {
                    <tr>
                        <td>@rol.IdRol</td>
                        <td>@rol.NombreRol</td>
                        <td>
                                <span class="estado-badge @(rol.FK_IdEstado == 1 ? "activo" : "inactivo")">
                                    @(rol.FK_IdEstado == 1 ? "Activo" : "Inactivo")
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal para eliminar rol -->
<div id="modalEliminarRol" class="modal-custom">
    <div class="modal-content-custom">
        <button id="cerrarModalRol" class="modal-close-custom" title="Cerrar">&times;</button>
        <h3>Desactivar Rol</h3>
        <p>¿Estás seguro que deseas desactivar el rol <strong id="nombreRolEliminar"></strong>?</p>
        <form id="formEliminarRol" method="post">
            <input type="hidden" name="id" id="idRolEliminar" />
            <button type="button" id="cancelarEliminarRol" class="btn btn-secondary">Cancelar</button>
            <button type="submit" class="btn btn-danger">Sí, desactivar</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function abrirModalEliminarRol(id, nombre) {
            document.getElementById("idRolEliminar").value = id;
            document.getElementById("nombreRolEliminar").textContent = nombre;
            document.getElementById("formEliminarRol").action = "/Roles/Eliminar/" + id;
            document.getElementById("modalEliminarRol").style.display = "block";
        }

        document.getElementById("cerrarModalRol").addEventListener("click", function () {
            document.getElementById("modalEliminarRol").style.display = "none";
        });

        document.getElementById("cancelarEliminarRol").addEventListener("click", function () {
            document.getElementById("modalEliminarRol").style.display = "none";
        });

        window.addEventListener("click", function (event) {
            const modal = document.getElementById("modalEliminarRol");
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });
    </script>

    <script>
        const searchInput = document.getElementById("searchInput");
        const estadoFilter = document.getElementById("estadoFilter");
        const resetFilters = document.getElementById("resetFilters");
        const tableRows = document.querySelectorAll(".empresas-table tbody tr");

        function aplicarFiltros() {
            const texto = searchInput.value.toLowerCase();
            const estadoSeleccionado = estadoFilter.value;

            tableRows.forEach(row => {
                const contenidoTexto = row.textContent.toLowerCase();
                const badge = row.querySelector(".estado-badge");
                const estadoActual = badge ? badge.classList.contains("activo") ? "activos" : "inactivos" : "";

                const coincideTexto = contenidoTexto.includes(texto);
                const coincideEstado = estadoSeleccionado === "todos" || estadoActual === estadoSeleccionado;

                row.style.display = (coincideTexto && coincideEstado) ? "" : "none";
            });
        }

        searchInput.addEventListener("input", aplicarFiltros);
        estadoFilter.addEventListener("change", aplicarFiltros);
        resetFilters.addEventListener("click", function () {
            searchInput.value = "";
            estadoFilter.value = "todos";
            aplicarFiltros();
        });
    </script>
}
