@model IEnumerable<ProyectoDojoGeko.Models.BitacoraViewModel>
@{
    ViewData["Title"] = "Bitácora del Sistema";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";

    var userRoles = new List<string>();
    if (User.IsInRole("SuperAdministrador")) userRoles.Add("SuperAdministrador");
    if (User.IsInRole("Administrador")) userRoles.Add("Administrador");
    if (User.IsInRole("Editor")) userRoles.Add("Editor");
    if (User.IsInRole("Visualizador")) userRoles.Add("Visualizador");

    bool puedeHacerTodo = userRoles.Any(r => r == "SuperAdministrador");
    bool puedeCrear = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEditar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEliminar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador" }.Contains(r));

    bool mostrandoTodos = ViewBag.MostrandoTodos ?? false;
    int totalDisponibles = ViewBag.TotalRegistrosDisponibles ?? 0;
}

<link rel="stylesheet" href="~/css/bitacora.css" />

<div class="bitacora-container">

    <!-- Encabezado -->
    <div class="bitacora-header">
        <h1>Bitácora del Sistema</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    @if (mostrandoTodos)
                    {
                        <span class="badge bg-info">Mostrando todos los registros (@totalDisponibles)</span>
                    }
                    else
                    {
                        <span class="badge bg-primary">Registros de hoy (@Model.Count() de @totalDisponibles)</span>
                    }
                </li>
            </ol>
        </nav>
    </div>

    <!-- Filtros -->
    <form asp-action="ObtenerBitacoras" method="get" class="filter-form">
        <div class="filter-row">
            <div>
                <label>Acción:</label>
                <select name="accion">
                    <option value="">Todas</option>
                    <option>Login</option>
                    <option>Logout</option>
                    <option>Crear Usuario</option>
                    <option>Editar Usuario</option>
                    <option>Eliminar Usuario</option>
                    <option>Crear Empleado</option>
                    <option>Editar Empleado</option>
                    <option>Eliminar Empleado</option>
                    <option>Cambio Contraseña</option>
                    <option>Error Sistema</option>
                    <option>Consulta Bitácora</option>
                    <option>Exportar Datos</option>
                    <option>Configuración Sistema</option>
                    <option>Backup Base Datos</option>
                    <option>Mantenimiento Sistema</option>
                </select>
            </div>
            <div>
                <label>ID Usuario:</label>
                <input type="number" name="idUsuario" min="1" />
            </div>
            <div>
                <label>Desde:</label>
                <input type="date" name="fechaDesde" />
            </div>
            <div>
                <label>Hasta:</label>
                <input type="date" name="fechaHasta" />
            </div>
        </div>
        <div class="filter-actions">
            <button type="submit" class="btn btn-primary">Aplicar Filtros</button>
            <button type="reset" class="btn btn-secondary">Limpiar</button>
        </div>
    </form>

    <form method="get" asp-action="ExportarPDF">
        <input type="hidden" name="accion" value="@ViewContext.HttpContext.Request.Query["accion"]" />
        <input type="hidden" name="idUsuario" value="@ViewContext.HttpContext.Request.Query["idUsuario"]" />
        <input type="hidden" name="fechaDesde" value="@ViewContext.HttpContext.Request.Query["fechaDesde"]" />
        <input type="hidden" name="fechaHasta" value="@ViewContext.HttpContext.Request.Query["fechaHasta"]" />
    </form>


    <!-- Acciones adicionales -->
    <div class="action-toolbar">
        <form method="get" asp-action="ExportarPDF" style="display:inline;">
            <input type="hidden" name="accion" value="@ViewContext.HttpContext.Request.Query["accion"]" />
            <input type="hidden" name="idUsuario" value="@ViewContext.HttpContext.Request.Query["idUsuario"]" />
            <input type="hidden" name="fechaDesde" value="@ViewContext.HttpContext.Request.Query["fechaDesde"]" />
            <input type="hidden" name="fechaHasta" value="@ViewContext.HttpContext.Request.Query["fechaHasta"]" />
            <a asp-action="ExportarExcel" class="btn btn-success">Exportar Excel</a>
            <button type="submit" class="btn btn-danger">📄 Exportar PDF</button>
        </form>
    </div>

    <!-- Contenido -->
    <div class="bitacora-content">
        @if (Model != null && Model.Any())
        {
            var registrosPorFecha = Model.GroupBy(b => b.FechaEntrada.Date)
                                         .OrderByDescending(g => g.Key);
            foreach (var grupo in registrosPorFecha)
            {
                var fecha = grupo.Key;
                var diaSemana = fecha.ToString("dddd", new System.Globalization.CultureInfo("es-ES"));
                diaSemana = char.ToUpper(diaSemana[0]) + diaSemana.Substring(1);
                var claseDia = ObtenerClaseDia(fecha.DayOfWeek);

                <div class="day-group @claseDia">
                    <div class="day-header">
                        <div class="day-name">@diaSemana</div>
                        <div class="day-date">@fecha.ToString("dd/MM/yyyy")</div>
                        <div class="day-count">@grupo.Count() registros</div>
                    </div>
                    <div class="timeline">
                        @foreach (var registro in grupo.OrderByDescending(r => r.FechaEntrada))
                        {
                            <div class="timeline-item">
                                <div class="timeline-point"></div>
                                <div class="timeline-content">
                                    <span class="timeline-time">@registro.FechaEntrada.ToString("HH:mm:ss")</span>
                                    <span class="timeline-action">@registro.Accion</span>
                                    <p>@registro.Descripcion</p>
                                    <div>
                                        <i class="fas fa-user"></i> Usuario: @registro.FK_IdUsuario
                                        <i class="fas fa-server"></i> Sistema: @registro.FK_IdSistema
                                    
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-records">
                <i class="fas fa-info-circle"></i>
                <h3>No hay registros disponibles</h3>
                @if (mostrandoTodos)
                {
                    <p>No se encontraron registros de bitácora en el sistema.</p>
                }
                else
                {
                    <p>No hay registros para el día de hoy. <a asp-action="Index" asp-route-mostrarTodos="true">Ver todos los registros</a></p>
                }
            </div>
        }
    </div>
</div>

@functions {
    public string ObtenerClaseDia(DayOfWeek dia)
    {
        return dia switch
        {
            DayOfWeek.Monday => "day-monday",
            DayOfWeek.Tuesday => "day-tuesday",
            DayOfWeek.Wednesday => "day-wednesday",
            DayOfWeek.Thursday => "day-thursday",
            DayOfWeek.Friday => "day-friday",
            DayOfWeek.Saturday => "day-saturday",
            DayOfWeek.Sunday => "day-sunday",
            _ => ""
        };
    }
}

