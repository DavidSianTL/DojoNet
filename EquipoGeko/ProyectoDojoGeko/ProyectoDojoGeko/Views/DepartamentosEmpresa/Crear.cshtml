@model ProyectoDojoGeko.Models.DepartamentosEmpresa.DepartamentosEmpresaFormViewModel

@{
    ViewData["Title"] = "Crear";
}

<h1>Crear Relación Empresa-Departamento</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Crear">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FK_IdEmpresa" class="control-label">Empresa</label>
                <select asp-for="FK_IdEmpresa" class="form-control" asp-items="ViewBag.Empresas"></select>
                <span asp-validation-for="FK_IdEmpresa" class="text-danger MensajeError"></span>
            </div>

            <div class="form-group">
                <label asp-for="FK_IdsDepartamentos" class="control-label">Departamentos</label>
                <select asp-for="FK_IdsDepartamentos" class="form-control" asp-items="ViewBag.Departamentos" multiple></select>
                <span class="text-danger MensajeError"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver a la lista</a>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorMessage" data-message="@TempData["ErrorMessage"]" style="display:none;"></div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(function () {

            // Mostrar SweetAlert si hay mensaje de error del servidor
            const errorMessageDiv = $('#errorMessage');
            if (errorMessageDiv.length) {
                const message = errorMessageDiv.data('message');
                console.log("Div de mensaje de error del servidor encontrado. Mensaje:", message);
                Swal.fire({
                    title: '¡Error!',
                    text: message,
                    icon: 'error',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#dc3545',
                    allowOutsideClick: false
                });
            } else {
                console.log("Div de mensaje de error del servidor NO encontrado.");
            }

            // Interceptar el envío del formulario para manejar la validación del lado del cliente con SweetAlert
            $('form').submit(function (e) {
                e.preventDefault(); // Previene el envío del formulario y la validación unobtrusive

                // Si la validación del cliente pasa, muestra la alerta de confirmación
                Swal.fire({
                    title: '¿Está seguro?',
                    text: '¿Desea guardar la relación entre los departamentos seleccionados y la empresa?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#06D6A0',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Sí, guardar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Si el usuario confirma, envía el formulario de forma nativa
                        // Re-vincula el manejador de submit original (si lo hubiera) o simplemente envía
                        $('form')[0].submit();
                    }
                });
            });

            // Inicialización Select2
            $('select[multiple]').select2({
                placeholder: "Seleccione los departamentos",
                allowClear: true,
                width: '100%',
                theme: 'bootstrap4'
            });
        });
    </script>
}