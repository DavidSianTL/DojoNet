@model IEnumerable<ProyectoDojoGeko.Dtos.Empleados.Responses.EmpleadoResponse>
@{
    ViewData["Title"] = "Gestion de Empleados - GEKO Sistemas de Seguridad";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";

    // Obtener los estados del ViewBag
    var todosLosEstados = ViewBag.Estados;

    // Obtener todos los roles del usuario
    // Obtenemos los roles de la sesión
    var rolesString = Context.Session.GetString("Roles") ?? "";
    var userRoles = rolesString.Split(',').Where(r => !string.IsNullOrEmpty(r)).ToList();

    // Verificamos permisos basados en roles
    bool puedeHacerTodo = userRoles.Contains("SuperAdministrador");
    bool puedeCrear = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEditar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEliminar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador" }.Contains(r));
    bool soloLectura = userRoles.All(r => r == "Visualizador");

}

<div class="empleados-container">
<!-- Header de la pagina -->
<div class="page-header">
    <div class="header-content">
        <h1 class="page-title">
            <i class="fas fa-user-tie"></i>
            Gestion de Empleados
        </h1>
        <p class="page-subtitle">
            Administra la informacion de los empleados registrados en el sistema
        </p>
    </div>
    <div class="header-actions">
        <div class="search-container">
            <i class="fas fa-search"></i>
            <input type="text" id="searchInput" placeholder="Buscar empleados..." class="search-input">
        </div>
        @if (!soloLectura)
        {
        <a href="@Url.Action("Crear", "Empleados")" class="btn-create">
            <i class="fas fa-plus"></i>
            <span>Nuevo Empleado</span>
        </a>
        }
    </div>
</div>

<!-- Filtros y estadisticas -->
<div class="filters-stats">
    <div class="stats-cards">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number" id="totalEmpleados">@Model.Count()</div>
                <div class="stat-label">Total Empleados</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon active">
                <i class="fas fa-user-check"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number" id="empleadosActivos">@Model.Count(e => e.Estado == 1)</div>
                <div class="stat-label">Empleados Activos</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon inactive">
                <i class="fas fa-user-slash"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number" id="empleadosInactivos">@Model.Count(e => e.Estado == 4)</div>
                <div class="stat-label">Empleados Inactivos</div>
            </div>
        </div>
    </div>

    <div class="filters">
        <div class="filter-group">
            <label for="estadoFilter">Estado:</label>
                <select id="estadoFilter" class="filter-select">
                    <option value="todos">Todos</option>
                    @foreach (var estado in ViewBag.Estados)
                    {
                        <option value="@estado.Estado">@estado.Estado</option>
                    }
                </select>
        </div>
        <div class="filter-group">
            <label for="generoFilter">Genero:</label>
            <select id="generoFilter" class="filter-select">
                <option value="todos">Todos</option>
                <option value="Masculino">Masculino</option>
                <option value="Femenino">Femenino</option>
                <option value="Otro">Otro</option>
            </select>
        </div>
        <button id="resetFilters" class="btn-reset-filters">
            <i class="fas fa-sync-alt"></i>
            Reiniciar Filtros
        </button>
    </div>
</div>

<!-- Tabla de empleados -->
<div class="table-container">
    <table class="empleados-table" id="empleadosTable">
        <thead>
            <tr>
                <th class="sortable" data-sort="id">ID <i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="nombre">Nombre Completo<i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="dpi">DPI<i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="correo">Correo Institucional<i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="ingreso">Fecha Ingreso<i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="antiguedad">Antiguedad<i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="genero">Genero<i class="fas fa-sort"></i></th>
                <th class="sortable" data-sort="estado">Estado<i class="fas fa-sort"></i></th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var empleado in Model)
                {
                        <tr class="@(empleado.Estado == 1 ? "" : "inactive-row")" data-estado="@(empleado.Estado == 1 ? "activo" : "inactivo")" data-genero="@empleado.Genero">
                        <td>@empleado.IdEmpleado</td>
                        <td>@empleado.NombreCompleto</td>
                        <td>@empleado.DPI</td>
                        <td>@empleado.CorreoInstitucional</td>
                        <td>@empleado.FechaIngreso.ToString("dd/MM/yyyy")</td>
                        <td>@empleado.Antiguedad</td>
                        <td>@empleado.Genero</td>
                        <td>
                            <span class="estado-badge @(empleado.Estado == 1 ? "activo" : "inactivo")">
                                @(empleado.Estado == 1 ? "Activo" : "Inactivo")
                            </span>
                        </td>
                        <td class="actions-cell">
                            <div class="actions-container">

                                <a href="@Url.Action("Detalle", "Empleados", new { id = empleado.IdEmpleado })" class="btn-action view" title="Ver detalles">
                                    <i class="fas fa-eye"></i>
                                </a>
                                @if (!soloLectura)
                                {
                                <a href="@Url.Action("Editar", "Empleados", new { id = empleado.IdEmpleado })" class="btn-action edit" title="Editar">
                                    <i class="fas fa-edit"></i>
                                </a>
                                }
                                @if (!soloLectura)
                                {
                                <button type="button" class="btn-action delete" onclick="confirmarEliminacion(@empleado.IdEmpleado, '@(empleado.NombreEmpleado) @(empleado.ApellidoEmpleado)')" title="Eliminar">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="9" class="no-data">
                        <div class="no-data-message">
                            <i class="fas fa-users-slash"></i>
                            <p>No hay empleados registrados en el sistema</p>
                            @if (!soloLectura)
                            {
                            <a href="@Url.Action("Crear", "Empleados")" class="btn-create-empty">
                                <i class="fas fa-plus"></i>
                                Agregar Empleado
                            </a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Paginacion -->
<div class="pagination-container">
    <div class="pagination-info">
        Mostrando <span id="showing-start">1</span> a <span id="showing-end">@Model.Count()</span> de <span id="total-items">@Model.Count()</span> empleados
    </div>
    <div class="pagination-controls">
        <button id="prev-page" class="pagination-btn" disabled>
            <i class="fas fa-chevron-left"></i>
            Anterior
        </button>
        <div class="pagination-pages" id="pagination-pages">
            <button class="page-btn active">1</button>
        </div>
        <button id="next-page" class="pagination-btn" disabled>
            Siguiente
            <i class="fas fa-chevron-right"></i>
        </button>
    </div>
</div>
</div>

<!-- Modal de confirmacion para eliminar -->
<div class="modal-overlay" id="deleteModal">
<div class="modal-container">
    <div class="modal-header">
        <h3>Confirmar Eliminacion</h3>
        <button class="modal-close" onclick="cerrarModal()">
            <i class="fas fa-times"></i>
        </button>
    </div>
    <div class="modal-body">
        <div class="modal-icon warning">
            <i class="fas fa-exclamation-triangle"></i>
        </div>
        <p>Esta seguro que desea eliminar al empleado <strong id="empleadoNombre"></strong>?</p>
        <p class="modal-warning">Esta accion no se puede deshacer.</p>
    </div>
    <div class="modal-footer">
        <button class="btn-cancel" onclick="cerrarModal()">
            <i class="fas fa-times"></i>
            Cancelar
        </button>
        <button class="btn-confirm" id="confirmDeleteBtn">
            <i class="fas fa-trash-alt"></i>
            Eliminar
        </button>
    </div>
</div>
</div>

@section Styles {
<link rel="stylesheet" href="~/css/empleados.css" />
}

@section Scripts {
<script>
    // Variables globales
    let empleadoIdToDelete = null;
    let allRows = [];

    document.addEventListener('DOMContentLoaded', function() {
        initializeFilters();
        initializeSearch();
        allRows = Array.from(document.querySelectorAll('#empleadosTable tbody tr'));
        
        // Inicializar el boton de confirmacion de eliminacion
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        if (confirmDeleteBtn) {
            confirmDeleteBtn.addEventListener('click', function() {
                if (empleadoIdToDelete) {
                    eliminarEmpleado(empleadoIdToDelete);
                }
            });
        }
    });

    function initializeFilters() {
        const estadoFilter = document.getElementById('estadoFilter');
        const generoFilter = document.getElementById('generoFilter');
        const resetBtn = document.getElementById('resetFilters');
        
        if (estadoFilter) estadoFilter.addEventListener('change', applyFilters);
        if (generoFilter) generoFilter.addEventListener('change', applyFilters);
        if (resetBtn) resetBtn.addEventListener('click', resetFilters);
    }

    function applyFilters() {
        const estadoValue = document.getElementById('estadoFilter').value;
        const generoValue = document.getElementById('generoFilter').value;
        
        allRows.forEach(row => {
            if (row.cells.length === 1) return;
            
            const rowEstado = row.getAttribute('data-estado');
            const rowGenero = row.getAttribute('data-genero');
            
            let showRow = true;
            
            if (estadoValue !== 'todos' && rowEstado !== estadoValue) {
                showRow = false;
            }
            
            if (generoValue !== 'todos' && rowGenero !== generoValue) {
                showRow = false;
            }
            
            row.style.display = showRow ? '' : 'none';
        });
        
        updateStats();
    }

    function resetFilters() {
        document.getElementById('estadoFilter').value = 'todos';
        document.getElementById('generoFilter').value = 'todos';
        document.getElementById('searchInput').value = '';
        
        allRows.forEach(row => {
            row.style.display = '';
        });
        
        updateStats();
    }

    function initializeSearch() {
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                
                allRows.forEach(row => {
                    if (row.cells.length === 1) return;
                    
                    const text = row.textContent.toLowerCase();
                    const matches = text.includes(searchTerm);
                    
                    row.style.display = (searchTerm === '' || matches) ? '' : 'none';
                });
                
                updateStats();
            });
        }
    }

    function updateStats() {
        const visibleRows = allRows.filter(row => 
            row.style.display !== 'none' && row.cells.length > 1
        );
        
        const activeCount = visibleRows.filter(row => 
            row.getAttribute('data-estado') === 'activo'
        ).length;
        
        const inactiveCount = visibleRows.filter(row => 
            row.getAttribute('data-estado') === 'inactivo'
        ).length;
        
        const totalEl = document.getElementById('totalEmpleados');
        const activeEl = document.getElementById('empleadosActivos');
        const inactiveEl = document.getElementById('empleadosInactivos');
        
        if (totalEl) totalEl.textContent = visibleRows.length;
        if (activeEl) activeEl.textContent = activeCount;
        if (inactiveEl) inactiveEl.textContent = inactiveCount;
    }

    function confirmarEliminacion(id, nombre) {
        empleadoIdToDelete = id;
        const nombreEl = document.getElementById('empleadoNombre');
        if (nombreEl) nombreEl.textContent = nombre;
        
        const modal = document.getElementById('deleteModal');
        if (modal) modal.classList.add('show');
    }

    function cerrarModal() {
        const modal = document.getElementById('deleteModal');
        if (modal) modal.classList.remove('show');
        empleadoIdToDelete = null;
    }

    function eliminarEmpleado(id) {
        // Redirigir a la accion GET de ELIMINAR para mostrar la confirmacion
        window.location.href = `/Empleados/ELIMINAR/${id}`;
    }

    // Cerrar modales al hacer clic fuera
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal-overlay')) {
            cerrarModal();
        }
    });
</script>
}