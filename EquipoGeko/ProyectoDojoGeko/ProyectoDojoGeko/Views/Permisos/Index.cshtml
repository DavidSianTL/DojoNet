@model IEnumerable<ProyectoDojoGeko.Models.PermisoViewModel>
@{
    ViewData["Title"] = "Gestión de Permisos - GEKO Sistemas de Seguridad";
    Layout = "~/Views/Shared/_DashboardLayoutSistema.cshtml";
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower();
    
    // Obtenemos los roles de la sesión
    var rolesString = Context.Session.GetString("Roles") ?? "";
    var userRoles = rolesString.Split(',').Where(r => !string.IsNullOrEmpty(r)).ToList();
    
    // Verificamos permisos basados en roles
    var esSuperAdmin = userRoles.Contains("SuperAdministrador");
    var esAdmin = userRoles.Contains("Administrador");
    var esEditor = userRoles.Contains("Editor");
    var esVisualizador = userRoles.Contains("Visualizador");
    
    // Variables de permisos para la vista
    bool puedeHacerTodo = esSuperAdmin;
    bool puedeCrear = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEditar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador", "Editor" }.Contains(r));
    bool puedeEliminar = userRoles.Any(r => new[] { "SuperAdministrador", "Administrador" }.Contains(r));
    bool soloLectura = userRoles.All(r => r == "Visualizador");
}

<link rel="stylesheet" href="~/css/Rol.css" />

<div class="empresas-container">
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title"><i class="fas fa-shield-alt"></i> Gestión de Permisos</h1>
            <p class="page-subtitle">Administra los permisos que se asignan a los roles del sistema</p>
        </div>

        <div class="header-actions">
            <div class="search-container">
                <i class="fas fa-search"></i>
                <input type="text" id="searchInput" placeholder="Buscar Permisos..." class="search-input">
            </div>
            <!-- <a href="@Url.Action("Crear", "Permisos")" class="btn-create">
                <i class="fas fa-plus"></i> <span>Nuevo Permiso</span>
            </a> -->
        </div>
    </div>



    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="filters-stats">
        <div class="stats-cards">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-building"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@Model.Count()</div>
                    <div class="stat-label">Total Permisos</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon active">
                    <i class="fas fa-toggle-on"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@Model.Count(e => e.FK_IdEstado == 1)</div>
                    <div class="stat-label">Permisos Activos</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon inactive">
                    <i class="fas fa-toggle-off"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@Model.Count(e => e.FK_IdEstado == 4)</div>
                    <div class="stat-label">Permisos Inactivos</div>
                </div>
            </div>
        </div>

        <!-- Filtros
        <div class="filters">
            <div class="filter-group">
                <label for="estadoFilter">Estado:</label>
                <select id="estadoFilter" class="filter-select">
                    <option value="todos">Todos</option>
                    <option value="activos">Activos</option>
                    <option value="inactivos">Inactivos</option>
                </select>
            </div>
            <button id="resetFilters" class="btn-reset-filters">
                <i class="fas fa-sync-alt"></i>
                Reiniciar Filtros
            </button>
        </div>
    </div>
         -->

        <div class="table-container" style="margin-top: 2rem;">
        <table class="empresas-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre del Permiso</th>
                    <th>Descripción</th>
                    <th>Estado</th>
                   
                </tr>
            </thead>
            <tbody>
                @foreach (var permiso in Model)
                {
                    <tr>
                        <td>@permiso.IdPermiso</td>
                        <td>@permiso.NombrePermiso</td>
                        <td>@permiso.Descripcion</td>
                        <td>
                                <span class="estado-badge @(permiso.FK_IdEstado == 1 ? "activo" : "inactivo")">
                                    @(permiso.FK_IdEstado == 1 ? "Activo" : "Inactivo")
                            </span>
                        </td>
                        <td>
                            <!--
                            <div class="actions-container">
                                <a href="@Url.Action("Editar", "Permisos", new { id = permiso.IdPermiso })" class="btn-action edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="javascript:void(0);"
                                   class="btn-action delete btnEliminarPermiso"
                                   data-id="@permiso.IdPermiso"
                                   data-nombre="@permiso.NombrePermiso">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </div>
                            -->
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal para eliminar (desactivar) permiso -->
<div id="modalEliminarPermiso" class="modal-custom">
    <div class="modal-content-custom">
        <button id="cerrarModalPermiso" class="modal-close-custom" title="Cerrar">&times;</button>
        <h3>Desactivar Permiso</h3>
        <p>¿Estás seguro que deseas desactivar el permiso <strong id="nombrePermisoEliminar"></strong>?</p>
        <form id="formEliminarPermiso" method="post" asp-controller="Permisos" asp-action="Eliminar">

            <input type="hidden" name="id" id="permisoIdEliminar" />
            <button type="button" id="cancelarEliminarPermiso" class="btn btn-secondary">Cancelar</button>
            <button type="submit" class="btn btn-danger">Sí, desactivar</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>


        document.querySelectorAll(".btnEliminarPermiso").forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.getAttribute("data-id");
                const nombre = this.getAttribute("data-nombre");

                document.getElementById("permisoIdEliminar").value = id;
                document.getElementById("nombrePermisoEliminar").textContent = nombre;

                document.getElementById("modalEliminarPermiso").style.display = "flex";
            });
        });

        document.getElementById("cerrarModalPermiso").addEventListener("click", function () {
            document.getElementById("modalEliminarPermiso").style.display = "none";
        });

        document.getElementById("cancelarEliminarPermiso").addEventListener("click", function () {
            document.getElementById("modalEliminarPermiso").style.display = "none";
        });


    </script>
   <script>
    const searchInput = document.getElementById("searchInput");
    const estadoFilter = document.getElementById("estadoFilter");
    const resetFilters = document.getElementById("resetFilters");
    const tableRows = document.querySelectorAll(".empresas-table tbody tr");

    function aplicarFiltros() {
        const texto = searchInput.value.toLowerCase();
        const estadoSeleccionado = estadoFilter.value;

        tableRows.forEach(row => {
            const contenidoTexto = row.textContent.toLowerCase();
            const badge = row.querySelector(".estado-badge");
            const estadoActual = badge ? badge.classList.contains("activo") ? "activos" : "inactivos" : "";

            const coincideTexto = contenidoTexto.includes(texto);
            const coincideEstado = estadoSeleccionado === "todos" || estadoActual === estadoSeleccionado;

            row.style.display = (coincideTexto && coincideEstado) ? "" : "none";
        });
    }

    searchInput.addEventListener("input", aplicarFiltros);
    estadoFilter.addEventListener("change", aplicarFiltros);
    resetFilters.addEventListener("click", function () {
        searchInput.value = "";
        estadoFilter.value = "todos";
        aplicarFiltros();
    });
</script>
}
