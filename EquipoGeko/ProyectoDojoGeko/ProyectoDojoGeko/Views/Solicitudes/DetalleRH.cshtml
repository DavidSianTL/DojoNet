@model ProyectoDojoGeko.Models.SolicitudViewModel
@{
    ViewData["Title"] = "Detalle de la Solicitud - GEKO Sistemas de Seguridad";
    Layout = "~/Views/Shared/_DashboardLayoutSistema.cshtml";
    var empleado = ViewBag.Empleado;
}

<link rel="stylesheet" href="~/css/empleado-detalle.css" />
<link rel="stylesheet" href="~/css/detalle-solicitud.css" />

<div class="empleado-detalle-container">
    <!-- Encabezado -->
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title">
                <i class="fas fa-file-alt"></i>
                Detalle de Solicitud
            </h1>
            <p class="page-subtitle">Información detallada sobre la solicitud de vacaciones</p>
        </div>
    </div>

    <div class="empleado-card">

        <!-- Datos de la Solicitud -->
        <div class="info-box">
            <h2>Nombre: @empleado?.NombresEmpleado @empleado?.ApellidosEmpleado</h2>
            <p><strong>Número de solicitud:</strong> #@Model.Encabezado.IdSolicitud</p>
            <div class="estado-box">
                <p>
                    <strong>Estado:</strong>
                    <span class="badge estado-@Model.Encabezado.Estado">
                        <i class="fas fa-info-circle"></i> @Model.Encabezado.Estado
                    </span>
                </p>
            </div>
            <div class="detalle-mini-grid">
                <div class="stat-item">
                    <p><strong>Días Solicitados:</strong> @Model.Encabezado.DiasSolicitadosTotal</p>
                </div>
            </div>
        </div>

        <!-- Información del Empleado -->
        <div class="info-section">
            <div class="section-header">
                <h3 class="section-title">
                    <i class="fas fa-user"></i> Información del Empleado
                </h3>
            </div>
            <div class="info-grid">
                <div class="info-item">
                    <p><strong>Código:</strong> @empleado?.CodigoEmpleado</p>
                    <p><strong>Puesto:</strong> @empleado?.Puesto</p>
                    <p><strong>Fecha de Ingreso:</strong> @(empleado?.FechaIngreso?.ToString("dd/MM/yyyy") ?? "")</p>
                </div>
            </div>
        </div>

        <!-- Fechas Solicitadas -->
        <div class="info-section">
            <div class="section-header">
                <h3 class="section-title">
                    <i class="fas fa-calendar-alt"></i> Fechas Solicitadas
                </h3>
            </div>
            <div class="table-responsive">
                <table class="empresas-table">
                    <thead>
                        <tr>
                            <th>Fecha Inicio</th>
                            <th>Fecha Fin</th>
                            <th>Días Hábiles</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var d in Model.Detalles)
                        {
                            <tr>
                                <td>@d.FechaInicio.ToString("dd/MM/yyyy")</td>
                                <td>@d.FechaFin.ToString("dd/MM/yyyy")</td>
                                <td>@d.DiasHabilesTomados</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

            <!-- Acciones -->
            <div class="acciones-box">
                <!-- Botón PDF -->
                <button type="button" onclick="generarPDF()" class="btn btn-pdfD boton-accion" id="btn-pdf">
                    <i class="fas fa-file-pdf"></i> <span id="pdf-text">Generar PDF</span>
                </button>

            <!-- Footer -->
            <div class="empleado-footer">
                <div class="footer-actions">
                    <a href="@Url.Action("RecursosHumanos", "Solicitudes")" class="btn btn-createa">
                        <i class="fas fa-list"></i>
                        Volver al Listado
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
        <link rel="stylesheet" href="~/css/empresas.css" />
        <link rel="stylesheet" href="~/css/detalle-solicitud.css" />
}

    <style>
        /*.acciones-box {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #f9f9f9;
            border-top: 1px solid #ddd;
            border-radius: 0 0 12px 12px;
        }

        .inline-form {
            display: inline-block;
        }

        .boton-accion {
            padding: 0.6rem 1.5rem;
            font-size: 1rem;
            border-radius: 8px;
            min-width: 140px;
            transition: all 0.3s ease;
        }

            .boton-accion i {
                margin-right: 6px;
            }*/

        .tabla-fechas-solicitadas td, .tabla-fechas-solicitadas th {
            padding: 1rem !important;
            font-size: 1rem;
        }

        .btn-createa {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: #581845;
            color: var(--white);
            border-radius: var(--border-radius);
            font-size: 0.875rem;
            font-weight: 600;
            text-decoration: none;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
            white-space: nowrap;
        }

            .btn-create:hover {
                background: #581845;
                transform: translateY(-2px);
                box-shadow: var(--shadow-md);
                text-decoration: none;
                color: var(--white);
            }

        .btn-pdfD {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: #9E5A88;
            color: var(--white);
            border-radius: var(--border-radius);
            font-size: 0.875rem;
            font-weight: 600;
            text-decoration: none;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
            white-space: nowrap;
        }

        .btn-pdfD:hover {
            background: #9E5A88;
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
            text-decoration: none;
            color: var(--white);
        }

        .boton-accion {
            padding: 10px 18px;
            font-size: 15px;
            border-radius: 10px;
            font-weight: bold;
            margin-right: 10px;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.15);
        }

            .boton-accion i {
                margin-right: 5px;
            }

        /* Notificación de éxito */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 5px;
            color: white;
            font-weight: bold;
            z-index: 9999;
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease;
        }

            .notification.success {
                background-color: #28a745;
            }

            .notification.show {
                opacity: 1;
                transform: translateX(0);
            }

        .page-title i {
            color: #853D6E;
        }

        .section-header i {
            color: #853D6E;
        }
    </style>

    <!-- Scripts para PDF - Usando pdfMake -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>

    <script>
        // Datos de la solicitud para JavaScript
        const solicitudData = {
            idSolicitud: @Model.Encabezado.IdSolicitud,
            nombreEmpleado: '@Html.Raw(Model.Encabezado.NombreEmpleado)',
            codigoEmpleado: '@Html.Raw(empleado?.CodigoEmpleado ?? "")',
            departamento: '@Html.Raw(empleado?.Departamento ?? "")',
            puesto: '@Html.Raw(empleado?.Puesto ?? "")',
            fechaIngreso: '@(empleado?.FechaIngreso?.ToString("dd/MM/yyyy") ?? "")',
            correo: '@Html.Raw(empleado?.CorreoInstitucional ?? "")',
            telefono: '@Html.Raw(empleado?.Telefono ?? "")',
            fechaSolicitud: '@Model.Encabezado.FechaIngresoSolicitud.ToString("dd/MM/yyyy")',
            diasSolicitados: @Model.Encabezado.DiasSolicitadosTotal,
            estado: '@Html.Raw(Model.Encabezado.Estado)',
            detalles: [
                @foreach (var detalle in Model.Detalles)
                {
                            <text>{
                                fechaInicio: '@detalle.FechaInicio.ToString("dd/MM/yyyy")',
                                fechaFin: '@detalle.FechaFin.ToString("dd/MM/yyyy")',
                                diasHabiles: @detalle.DiasHabilesTomados
                            },</text>
                }
            ]
        };

        function generarPDF() {
            console.log('Iniciando generación de PDF con pdfMake...');

            // Cambiar texto del botón
            const btnPdf = document.getElementById('btn-pdf');
            const pdfText = document.getElementById('pdf-text');
            const textoOriginal = pdfText.textContent;

            pdfText.textContent = 'Generando...';
            btnPdf.disabled = true;

            // Función para restaurar botón
            function restaurarBoton() {
                pdfText.textContent = textoOriginal;
                btnPdf.disabled = false;
            }

            // Verificar que pdfMake esté disponible
            if (typeof pdfMake === 'undefined') {
                alert('Error: No se pudo cargar la librería PDF. Verifique su conexión a internet.');
                restaurarBoton();
                return;
            }

            try {
                // Crear filas de la tabla de detalles
                const filasTabla = [
                    // Cabecera de la tabla
                    [
                        { text: 'Fecha Inicio', style: 'tableHeader' },
                        { text: 'Fecha Fin', style: 'tableHeader' },
                        { text: 'Días Hábiles', style: 'tableHeader' }
                    ]
                ];

                // Agregar filas de datos
                solicitudData.detalles.forEach(detalle => {
                    filasTabla.push([
                        { text: detalle.fechaInicio, style: 'tableCell' },
                        { text: detalle.fechaFin, style: 'tableCell' },
                        { text: detalle.diasHabiles.toString(), style: 'tableCell', alignment: 'center' }
                    ]);
                });

                // Definición del documento PDF - VERSIÓN MEJORADA
                const docDefinition = {
                    pageSize: 'A4',
                    pageMargins: [40, 40, 40, 40],

                    content: [
                        // Título principal - con colores más fuertes
                        {
                            text: 'Detalle de Solicitud',
                            style: 'mainTitle',
                            margin: [0, 0, 0, 8]
                        },

                        // Subtítulo - con color más fuerte
                        {
                            text: 'Información detallada sobre la solicitud de vacaciones',
                            style: 'subtitle',
                            margin: [0, 0, 0, 20]
                        },

                        // Número de solicitud - con color más fuerte
                        {
                            text: `Número de solicitud: ${solicitudData.idSolicitud}`,
                            style: 'solicitudNumber',
                            margin: [0, 0, 0, 25]
                        },

                        // Sección de días solicitados y fecha - mejorada
                        {
                            table: {
                                widths: ['50%', '50%'],
                                body: [
                                    [
                                        {
                                            stack: [
                                                { text: 'Días solicitados', style: 'statLabel', alignment: 'center' },
                                                { text: `${solicitudData.diasSolicitados} días`, style: 'statValue', alignment: 'center' }
                                            ],
                                            border: [false, false, false, false]
                                        },
                                        {
                                            stack: [
                                                { text: 'Fecha de creación', style: 'statLabel', alignment: 'center' },
                                                { text: solicitudData.fechaSolicitud, style: 'statValue', alignment: 'center' }
                                            ],
                                            border: [false, false, false, false]
                                        }
                                    ]
                                ]
                            },
                            layout: 'noBorders',
                            margin: [0, 0, 0, 30]
                        },

                        // Título "Información del Empleado" - mejorado
                        {
                            text: 'Información del Empleado',
                            style: 'sectionTitle',
                            margin: [0, 0, 0, 20]
                        },

                        // Grid de información del empleado - mejorado
                        {
                            table: {
                                widths: ['33%', '33%', '34%'],
                                body: [
                                    [
                                        {
                                            stack: [
                                                { text: 'Código', style: 'fieldLabel' },
                                                { text: solicitudData.codigoEmpleado, style: 'fieldValue' }
                                            ],
                                            border: [false, false, false, false],
                                            margin: [0, 0, 10, 15]
                                        },
                                        {
                                            stack: [
                                                { text: 'Departamento', style: 'fieldLabel' },
                                                { text: solicitudData.departamento, style: 'fieldValue' }
                                            ],
                                            border: [false, false, false, false],
                                            margin: [0, 0, 10, 15]
                                        },
                                        {
                                            stack: [
                                                { text: 'Puesto', style: 'fieldLabel' },
                                                { text: solicitudData.puesto, style: 'fieldValue' }
                                            ],
                                            border: [false, false, false, false],
                                            margin: [0, 0, 0, 15]
                                        }
                                    ],
                                    [
                                        {
                                            stack: [
                                                { text: 'Fecha de Ingreso', style: 'fieldLabel' },
                                                { text: solicitudData.fechaIngreso, style: 'fieldValue' }
                                            ],
                                            border: [false, false, false, false],
                                            margin: [0, 0, 10, 0]
                                        },
                                        {
                                            stack: [
                                                { text: 'Correo', style: 'fieldLabel' },
                                                { text: solicitudData.correo, style: 'fieldValue' }
                                            ],
                                            border: [false, false, false, false],
                                            margin: [0, 0, 10, 0]
                                        },
                                        {
                                            stack: [
                                                { text: 'Teléfono', style: 'fieldLabel' },
                                                { text: solicitudData.telefono, style: 'fieldValue' }
                                            ],
                                            border: [false, false, false, false],
                                            margin: [0, 0, 0, 0]
                                        }
                                    ]
                                ]
                            },
                            layout: 'noBorders',
                            margin: [0, 0, 0, 30]
                        },

                        // Título "Fechas Solicitadas" - mejorado
                        {
                            text: 'Fechas Solicitadas',
                            style: 'sectionTitle',
                            margin: [0, 0, 0, 20]
                        },

                        // Tabla de fechas - mejorada
                        {
                            table: {
                                headerRows: 1,
                                widths: ['*', '*', '*'],
                                body: filasTabla
                            },
                            layout: {
                                hLineWidth: function (i, node) {
                                    return (i === 0 || i === node.table.body.length) ? 2 : 1;
                                },
                                vLineWidth: function (i, node) {
                                    return (i === 0 || i === node.table.widths.length) ? 2 : 1;
                                },
                                hLineColor: function (i, node) {
                                    return (i === 0 || i === node.table.body.length) ? '#2c3e50' : '#bdc3c7';
                                },
                                vLineColor: function (i, node) {
                                    return (i === 0 || i === node.table.widths.length) ? '#2c3e50' : '#bdc3c7';
                                },
                                fillColor: function (rowIndex, node, columnIndex) {
                                    return (rowIndex === 0) ? '#ecf0f1' : (rowIndex % 2 === 0 ? '#f8f9fa' : null);
                                },
                                paddingLeft: function(i, node) { return 8; },
                                paddingRight: function(i, node) { return 8; },
                                paddingTop: function(i, node) { return 8; },
                                paddingBottom: function(i, node) { return 8; }
                            },
                            margin: [0, 0, 0, 20]
                        }
                    ],

                    styles: {
                        mainTitle: {
                            fontSize: 22,
                            bold: true,
                            color: '#2c3e50'  // Azul oscuro fuerte
                        },
                        subtitle: {
                            fontSize: 13,
                            color: '#34495e',  // Gris azulado fuerte
                            italics: true
                        },
                        solicitudNumber: {
                            fontSize: 12,
                            color: '#2c3e50',  // Azul oscuro fuerte
                            bold: true
                        },
                        statLabel: {
                            fontSize: 11,
                            color: '#7f8c8d',  // Gris fuerte
                            margin: [0, 0, 0, 5]
                        },
                        statValue: {
                            fontSize: 16,
                            bold: true,
                            color: '#e74c3c'  // Rojo fuerte para destacar
                        },
                        sectionTitle: {
                            fontSize: 16,
                            bold: true,
                            color: '#2980b9',  // Azul fuerte
                            decoration: 'underline'
                        },
                        fieldLabel: {
                            fontSize: 11,
                            color: '#3498db',  // Azul brillante fuerte
                            bold: true,
                            margin: [0, 0, 0, 3]
                        },
                        fieldValue: {
                            fontSize: 11,
                            color: '#2c3e50'  // Azul oscuro fuerte
                        },
                        tableHeader: {
                            fontSize: 12,
                            bold: true,
                            color: '#2c3e50',  // Azul oscuro fuerte
                            alignment: 'center'
                        },
                        tableCell: {
                            fontSize: 11,
                            color: '#34495e',  // Gris azulado fuerte
                            alignment: 'center'
                        }
                    }
                };

                // Generar y descargar el PDF
                pdfMake.createPdf(docDefinition).download(`Solicitud_Vacaciones_${solicitudData.idSolicitud}_${new Date().toISOString().slice(0, 10)}.pdf`);

                // Mostrar notificación de éxito
                mostrarNotificacion("Archivo PDF exportado exitosamente", "success");

                // Restaurar botón
                restaurarBoton();

            } catch (error) {
                console.error('Error al generar PDF:', error);
                alert('Error al generar el PDF: ' + error.message);
                restaurarBoton();
            }
        }

        // Función para mostrar notificaciones
        function mostrarNotificacion(mensaje, tipo) {
            // Crear elemento de notificación
            const notification = document.createElement('div');
            notification.className = `notification ${tipo}`;
            notification.textContent = mensaje;

            // Agregar al DOM
            document.body.appendChild(notification);

            // Mostrar con animación
            setTimeout(() => {
                notification.classList.add('show');
            }, 100);

            // Ocultar después de 3 segundos
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }

        // Verificar carga de librerías al cargar la página
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Verificando pdfMake...');

            if (typeof pdfMake !== 'undefined') {
                console.log('pdfMake cargado correctamente');
            } else {
                console.error('pdfMake NO está disponible');
            }
        });
    </script>
