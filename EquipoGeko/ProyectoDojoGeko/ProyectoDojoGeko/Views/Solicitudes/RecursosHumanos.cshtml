@model List<ProyectoDojoGeko.Models.SolicitudEncabezadoViewModel>

@{
    ViewData["Title"] = "Listado de Solicitudes";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var estados = (List<SelectListItem>)ViewBag.Estados;
    var todasLasSolicitudes = Model.ToList();
    var totalSolicitudes = todasLasSolicitudes.Count;
}
@* @functions {
    public string ObtenerTextoEstado(int estadoId)
    {
        return estadoId switch
        {
            1 => "Ingresada",
            2 => "En Proceso",
            3 => "Aprobada",
            4 => "Rechazada",
            _ => "Desconocido"
        };
    }
} *@


<div class="empresas-container">

    <!--Header-->
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title">
                <i class="fa-solid fa-clipboard-list"></i>
                Solicitudes de vacaciones <br> RRHH
            </h1>
            <p class="page-subtitle">
                Listado de solicitudes de vacaciones de los empleados.
            </p>
        </div>
        <div class="header-actions">
            <form method="get" asp-action="RecursosHumanos" asp-controller="Solicitudes">
                <div class="input-group">
                    <div style="position: relative;">
                        <i class="fa-solid fa-user-tie" style="position: absolute; left: 16px; top: 50%; transform: translateY(-50%); color: var(--gray-400);"></i>
                        <input id="searchInput" type="text" name="nombresEmpleado" placeholder="Buscar empleado..." class="search-input" value="@Context.Request.Query["nombresEmpleado"]" />
                    <button type="submit" class="btn btn-search">
                        <i class="fas fa-search"></i>
                    </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Estadísticas y filtros -->
    <div class="filters-stats">

        <!-- Estadísticas -->
        <div class="stats-cards">
            <div class="stat-card">
                <div class="status-icon"><i class="fa-solid fa-rectangle-list"></i></div>
                <div class="stat-content">
                    <div class="stat-number">@totalSolicitudes</div>
                    <div class="stat-label">Total Solicitudes</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="status-icon pendiente"><i class="fa-solid fa-stopwatch"></i></div>
                <div class="stat-content">
                    <div class="stat-number">0</div>
                    <div class="stat-label">Estado Pendiente</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="status-icon vigente"><i class="fa-solid fa-check"></i></div>
                <div class="stat-content">
                    <div class="stat-number">0</div>
                    <div class="stat-label">Estado Vigente</div>
                </div>
            </div>
        </div>

@*         <div class="filters">
            <div class="filter-group">
                <form method="get" asp-action="RecursosHumanos" asp-controller="Solicitudes" class="row g-3 mb-4">

                    <div class="col-md-3">
                        <label for="nombreEmpresa" class="form-label">Empresa</label>
                        <input type="text" name="nombreEmpresa" class="form-control" value="@Context.Request.Query["nombreEmpresa"]" />
                    </div>

                    <div class="col-md-3">
                        <label for="estadoSolicitud" class="form-label">Estado</label>
                        <select name="estadoSolicitud" class="form-select">
                            <option value="">Todos</option>
                            @foreach (var estado in new[] { "Ingresada", "Pendientes", "Autorizada", "Rechazada", "Vigente", "Cancelada", "Tomada" })
                            {
                                <option value="@estado" selected="@(Context.Request.Query["estadoSolicitud"] == estado ? "selected" : null)">
                                    @estado
                                </option>
                            }
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label for="fechaInicio" class="form-label">Desde</label>
                        <input type="date" name="fechaInicio" class="form-control" value="@Context.Request.Query["fechaInicio"]" />
                    </div>

                    <div class="col-md-3">
                        <label for="fechaFin" class="form-label">Hasta</label>
                        <input type="date" name="fechaFin" class="form-control" value="@Context.Request.Query["fechaFin"]" />
                    </div>

                    <div class="col-md-12 d-flex gap-2 mt-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-filter"></i> Filtrar
                        </button>

                        <div class="filter-group reset-button-right">
                            <button id="resetFilters" class="btn-reset-filters">
                                <i class="fas fa-sync-alt"></i>
                                Reiniciar Filtros
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div> *@
    </div>

    <!-- Tabla -->
    <div class="table-container">
        <table class="empresas-table" id="rhTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre del Empleado</th>
                    <th>Cantidad de días</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    foreach (var solicitud in Model)
                    {
                        <tr>
                            <td>@solicitud.IdSolicitud</td>
                            <td>@solicitud.NombreEmpleado</td>
                            <td>@solicitud.DiasSolicitadosTotal</td>
@*                             <td>
                                @{
                                    var estadoTexto = estados.FirstOrDefault(e => e.Value == solicitud.Estado.ToString())?.Text ?? "Desconocido";
                                }
                                <span class="badge badge-success">@estadoTexto</span>
                            </td> *@
                            <td>
                                <a href="@Url.Action("DetalleRH", "Solicitudes", new { id = solicitud.IdSolicitud })" class="btn-action ver">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" style="text-align: center;">No hay solicitudes </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    <div class="pagination-container">
        <div class="pagination-info">
            Mostrando <span id="showing-start">1</span> a <span id="showing-end">@Model.Count()</span> de <span id="total-items">@Model.Count()</span> solicitudes
        </div>
        <div class="pagination-controls">
            <button id="prev-page" class="pagination-btn" disabled>
                <i class="fas fa-chevron-left"></i>
                Anterior
            </button>
            <div class="pagination-pages" id="pagination-pages">
                <button class="page-btn active">1</button>
            </div>
            <button id="next-page" class="pagination-btn" disabled>
                Siguiente
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/empresas.css" />
}
<script src="~/js/solicitudes.js"></script>
<style>
    .status-icon {
        width: 40px;
        height: 40px;
        border-radius: var(--border-radius-sm);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.125rem;
        color: var(--white);
        background: linear-gradient(135deg, #EEA916, #F46507);
        flex-shrink: 0;
    }

        .status-icon.vigente {
            background: linear-gradient(135deg, #27C24B, #02A327);
        }

        .status-icon.pendiente {
            background: linear-gradient(135deg, #E8D417, #CCB900);
        }

    .page-title i {
        color: #F46507;
    }

    .filters-stats {
        display: flex;
        flex-direction: column; 
        gap: 1.5rem;
    }

    .stats-cards {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .filters {
        display: flex;
        gap: 1rem;
        align-items: flex-end;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    .reset-button-right {
        margin-left: auto;
        display: flex;
        align-items: flex-end;
    }


    .page-btn.active {
        background: #F46507;
        color: var(--white);
        border-color: #F46507;
    }

    .btn-action.ver {
        background: #EEA916;
    }

        .btn-action.ver:hover {
            background: #F46507;
        }


    .btn-search {
        padding: 12px 15px;
        background: linear-gradient(135deg, #EEA916, #F46507)
    }

        .btn-search:hover {
            padding: 12px 15px;
            background: linear-gradient(135deg, #F46507,#EEA916 )
        }

</style>
