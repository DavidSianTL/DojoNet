@model List<ProyectoDojoGeko.Models.SolicitudViewModel>
@{
    ViewData["Title"] = "Solicitudes de Vacaciones";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";

    var contrato = Context.Session.GetString("TipoContrato");
    var codigo = Context.Session.GetString("CodigoEmpleado");
    var nombre = Context.Session.GetString("NombreCompletoEmpleado");
    var diasDisponibles = ViewBag.DiasDisponibles;
	// Creamos una lista para seleccionar los estados de las solicitudes y mostrar los nombres en lugar de los valores
    //var estados = (List<SelectListItem>)ViewBag.Estados;
    var estados = ViewBag.Estados as List<SelectListItem> ?? new List<SelectListItem>();
    var fecha = DateTime.UtcNow;
}

<div class="solicitudes-container">
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title">
                <i class="fas fa-plane-departure"></i>
                Solicitudes de Vacaciones
            </h1>
            <p class="page-subtitle">
                Consulta y gestiona tus solicitudes de vacaciones.
            </p>
        </div>
    </div>

    <div class="form-card empleado-info-card">
        <div class="info-row">
            <span style="display:none;">C�digo: <strong>@(codigo ?? "-----")</strong></span>
            <span>Fecha: <strong>@fecha.ToString("dd/MM/yyyy")</strong></span>
            <span>Días disponibles: <strong>@(ViewBag.DiasDisponibles ?? "--")</strong></span>
        </div>
        <div class="info-row">
            <span>Nombre: <strong>@(nombre ?? "-----")</strong></span>
            <span>Código: <strong>@(codigo ?? "-----")</strong></span>
        </div>
    </div>

    <div class="form-card solicitudes-list-card">
        <div class="solicitudes-header">
            <h2><i class="fas fa-list"></i> Solicitudes</h2>

        </div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>No. Solicitud</th>
                    <th>Fecha Ingreso</th>
                    <th>Días Solicitados</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        var solicitud = Model[i];
                        <tr class="main-row" data-toggle="collapse" data-target="#detalles-@solicitud.Encabezado.IdSolicitud" style="cursor:pointer;">
                            <td>@solicitud.Encabezado.IdSolicitud</td>
                            <td>@solicitud.Encabezado.FechaIngresoSolicitud</td>
                            <td>@solicitud.Encabezado.DiasSolicitadosTotal</td>
                            <td>
                                @{
                                    var nombreEstado = estados.FirstOrDefault(e => e.Value == solicitud.Encabezado.Estado.ToString())?.Text ?? "Desconocido";
                                }
                                <span class="badge badge-success">@nombreEstado</span>
                            </td>
                        </tr>
                        <tr class="collapse-row" id="detalles-@solicitud.Encabezado.IdSolicitud" style="display:none;">
                            <td colspan="4">
                                <strong>Fechas solicitadas:</strong>
                                <ul>
                                    @foreach (var detalle in solicitud.Detalles)
                                    {
                                        <li>
                                            @detalle.FechaInicio.ToString("dd/MM/yyyy") - @detalle.FechaFin.ToString("dd/MM/yyyy") (@detalle.DiasHabilesTomados día(s))
                                        </li>
                                    }
                                </ul>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center">No hay solicitudes registradas.</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="actions-container">
            <button class="btn-submit" onclick="location.href='@Url.Action("Crear", "Solicitudes")'">
                <i class="fas fa-plus"></i> Agregar solicitud
            </button>

            <button class="btn-cancel"><i class="fas fa-times"></i> Cancelar solicitud</button>
            <button class="btn-reset"><i class="fas fa-paper-plane"></i> Solicitar autorización</button>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/empleado-form.css" />
    <style>
        :root {
            --primary-color: #003C9D;
            --secondary-color: #6c757d;
            --highlight-color: #F39C12;
            --light-bg: #f8f9fa;
            --soft-gray: #e9ecef;
            --text-color: #343a40;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .solicitudes-container {
            padding: 30px;
            background-color: #fdfdfd;
        }

        .page-header {
            margin-bottom: 25px;
            border-bottom: 2px solid var(--soft-gray);
            padding-bottom: 10px;
        }

        .page-title {
            font-size: 28px;
            color: var(--primary-color);
            margin-bottom: 5px;
        }

        .page-subtitle {
            font-size: 15px;
            color: #6c757d;
        }

        .form-card {
            background: white;
            padding: 25px;
            border-radius: 16px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            margin-bottom: 30px;
        }

        .empleado-info-card .info-row {
            display: flex;
            justify-content: space-between;
            padding: 6px 0;
            font-size: 15px;
            color: var(--text-color);
        }

        .solicitudes-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .solicitudes-header h2 {
                font-size: 22px;
                color: var(--primary-color);
            }

        .table {
            width: 100%;
            font-size: 15px;
            border-collapse: separate;
            border-spacing: 0 12px;
        }

            .table th {
                background-color: var(--primary-color);
                color: white;
                padding: 12px;
                text-align: center;
                border-radius: 12px 12px 0 0;
            }

            .table td {
                background-color: #ffffff;
                border: 1px solid #dee2e6;
                vertical-align: middle;
                text-align: center;
                border-radius: 0;
                padding: 10px;
            }

            .table tr.main-row {
                box-shadow: 0 2px 6px rgba(0,0,0,0.06);
                transition: all 0.3s ease-in-out;
                cursor: pointer;
            }

                .table tr.main-row:hover {
                    background-color: #f1f3f5;
                    transform: scale(1.005);
                }

        .badge {
            padding: 6px 14px;
            border-radius: 20px;
            font-size: 13px;
            display: inline-block;
        }

        .badge-success {
            background-color: #28a745;
            color: white;
        }

        .badge-secondary {
            background-color: var(--secondary-color);
            color: white;
        }

        .badge-info {
            background-color: #0dcaf0;
            color: white;
        }

        .actions-container {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 25px;
        }

        .btn-submit,
        .btn-cancel,
        .btn-reset {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            color: white;
            cursor: pointer;
            font-size: 15px;
            transition: background-color 0.3s ease;
        }

        .btn-submit {
            background-color: var(--primary-color);
        }

            .btn-submit:hover {
                background-color: #002f7d;
            }

        .btn-cancel {
            background-color: var(--secondary-color);
        }

            .btn-cancel:hover {
                background-color: #5a6268;
            }

        .btn-reset {
            background-color: var(--highlight-color);
        }

            .btn-reset:hover {
                background-color: #d48806;
            }

            .btn-submit i,
            .btn-cancel i,
            .btn-reset i {
                margin-right: 6px;
            }

        /* Responsive */
        @@media (max-width: 768px) {
            .empleado-info-card .info-row

        {
            flex-direction: column;
            gap: 6px;
        }

        .actions-container {
            flex-direction: column;
            align-items: stretch;
        }

        }
    </style>
}


@section Scripts {
    <script>
        document.querySelectorAll('.main-row').forEach(row => {
            row.addEventListener('click', function (e) {
                // Evita que el evento se propague si haces click en un botón dentro de la fila
                if (e.target.tagName === 'BUTTON' || e.target.closest('button')) return;

                const targetId = this.getAttribute('data-target');
                const detalleRow = document.querySelector(targetId);
                const icon = this.querySelector('.fa-chevron-down, .fa-chevron-up');
                if (detalleRow.style.display === "none" || !detalleRow.style.display) {
                    detalleRow.style.display = "table-row";
                    if (icon) {
                        icon.classList.remove('fa-chevron-down');
                        icon.classList.add('fa-chevron-up');
                    }
                } else {
                    detalleRow.style.display = "none";
                    if (icon) {
                        icon.classList.remove('fa-chevron-up');
                        icon.classList.add('fa-chevron-down');
                    }
                }
            });
        });
    </script>
}