@model Proyercto1.Models.Producto

@{
    ViewData["Title"] = "Crear Producto";
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    body {
        background-color: #fff8f0;
        font-family: 'Segoe UI', sans-serif;
    }

    .login-container {
        max-width: 500px;
        margin: 100px auto;
        padding: 40px;
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .login-container h2 {
            font-size: 2rem;
            color: #ff5722;
            margin-bottom: 25px;
        }

    .form-container {
        margin-bottom: 30px;
    }

    .form-label {
        font-weight: bold;
        color: #333;
    }

    .form-control {
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .floating-btn {
        width: 100%;
        background-color: #ff9800;
        color: white;
        padding: 12px;
        border: none;
        font-weight: bold;
        border-radius: 8px;
        transition: background-color 0.3s ease;
    }

        .floating-btn:hover {
            background-color: #e65100;
        }

    .back-btn {
        display: block;
        text-align: center;
        margin-top: 20px;
        color: #6c757d;
        text-decoration: none;
    }

        .back-btn:hover {
            text-decoration: underline;
            color: #ff5722;
        }
</style>

<div class="login-container">
    <h2>🛒 Crear Producto</h2>

    <form method="post" id="productoForm">
        <div class="form-container">
            <label for="Nombre" class="form-label">Nombre del Producto</label>
            <input type="text" class="form-control" id="Nombre" name="Nombre" placeholder="Ej. Arroz Premium 5kg" />
        </div>
        <div class="form-container">
            <label for="Precio" class="form-label"> Precio</label>
            <input type="number" step="0.01" class="form-control" id="Precio" name="Precio" placeholder="Ej. 89.90" />
        </div>
        <div class="form-container">
            <label for="Id" class="form-label"> Código de Producto</label>
            <input type="number" class="form-control" id="Id" name="Id" placeholder="Ej. 1234" />
        </div>
        <div class="form-container">
            <label for="Descripcion" class="form-label"> Descripción</label>
            <input type="text" class="form-control" id="Descripcion" name="Descripcion" placeholder="Ej. Saco de arroz blanco de alta calidad" />
        </div>
        <div class="form-container">
            <label for="Stock" class="form-label"> Stock Disponible</label>
            <input type="number" class="form-control" id="Stock" name="Stock" placeholder="Ej. 200" />
        </div>
        <button type="submit" class="floating-btn">Agregar al Inventario</button>
    </form>

    <a href="@Url.Action("Index", "Home")" class="back-btn">← Volver al Inicio</a>
</div>

<script>
    window.onload = function () {
        document.getElementById('productoForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const nombre = document.getElementById('Nombre').value.trim();
            const precio = parseFloat(document.getElementById('Precio').value);
            const id = parseInt(document.getElementById('Id').value);
            const descripcion = document.getElementById('Descripcion').value.trim();
            const stock = parseInt(document.getElementById('Stock').value);

            if (!nombre || !descripcion || isNaN(precio) || isNaN(stock)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Campos vacíos',
                    text: 'Por favor, complete todos los campos.',
                });
                return;
            }

            if (isNaN(id) || id <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Código inválido',
                    text: 'El código debe ser mayor a 0.',
                });
                return;
            }

            if (precio <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Precio inválido',
                    text: 'El precio debe ser mayor que 0.',
                });
                return;
            }

            if (stock <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Stock inválido',
                    text: 'El stock debe ser mayor que 0.',
                });
                return;
            }

            Swal.fire({
                icon: 'success',
                title: 'Producto agregado',
                text: '¡Producto añadido con éxito al inventario!',
            }).then((result) => {
                if (result.isConfirmed) {
                    this.submit();
                }
            });
        });
    };
</script>
