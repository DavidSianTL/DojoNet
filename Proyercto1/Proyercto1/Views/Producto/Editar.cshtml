@model Proyercto1.Models.Producto

@{
    ViewData["Title"] = "Editar Producto";
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    body {
        background-color: #fff8f0; 
        font-family: 'Segoe UI', sans-serif;
    }

    .edit-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 20px;
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    h2 {
        text-align: center;
        color: #ff5722; 
        margin-bottom: 30px;
        font-size: 2rem;
    }

    .form-container {
        margin-top: 20px;
    }

    .form-label {
        color: #333;
    }

    .form-control {
        border-radius: 8px;
        padding: 10px;
        font-size: 1rem;
    }

    .btn-primary {
        width: 100%;
        padding: 12px;
        background: linear-gradient(to right, #007bff, #00c6ff);
        border-radius: 8px;
        font-weight: bold;
    }

        .btn-primary:hover {
            background: linear-gradient(to right, #0056b3, #00aaff);
        }

    .back-btn {
        display: block;
        margin-top: 15px;
        text-align: center;
        color: #6c757d;
        text-decoration: none;
    }

        .back-btn:hover {
            text-decoration: underline;
            color: #ff5722;
        }
</style>

<div class="edit-container">
    <h2>✏️ Editar Producto</h2>

    <div class="form-container">
        <form method="post" id="editProductoForm">
            <div class="mb-3">
                <label for="Nombre" class="form-label">Nombre</label>
                <input type="text" class="form-control" id="Nombre" name="Nombre" value="@Model.Nombre" required />
            </div>
            <div class="mb-3">
                <label for="Precio" class="form-label">Precio</label>
                <input type="number" step="0.01" class="form-control" id="Precio" name="Precio" value="@Model.Precio" required />
            </div>
            <div class="mb-3">
                <label for="Descripcion" class="form-label">Descripción</label>
                <input type="text" class="form-control" id="Descripcion" name="Descripcion" value="@Model.Descripcion" required />
            </div>
            <div class="mb-3">
                <label for="Stock" class="form-label">Stock</label>
                <input type="number" class="form-control" id="Stock" name="Stock" value="@Model.Stock" required />
            </div>
            <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        </form>

        <a href="@Url.Action("Dashboard", "Producto")" class="back-btn">← Regresar al Dashboard</a>
    </div>
</div>

<script>
    window.onload = function () {
       
        document.getElementById('editProductoForm').addEventListener('submit', function (event) {
            event.preventDefault(); 

            
            var nombre = document.getElementById('Nombre').value.trim();
            var precio = parseFloat(document.getElementById('Precio').value);
            var descripcion = document.getElementById('Descripcion').value.trim();
            var stock = document.getElementById('Stock').value.trim();

         
            if (!nombre || !descripcion || !stock) {
                Swal.fire({
                    icon: 'error',
                    title: 'Campos vacíos',
                    text: 'Todos los campos son obligatorios. Por favor, completa todos los campos.',
                    confirmButtonColor: '#d33'
                });
                return;
            }

           
            if (precio <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error en el precio',
                    text: 'El precio debe ser mayor a 0.',
                    confirmButtonColor: '#d33'
                });
                return;
            }

           
            if (isNaN(precio)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error en el precio',
                    text: 'Por favor ingresa un precio válido.',
                    confirmButtonColor: '#d33'
                });
                return;
            }

            
            if (stock <= 0 || isNaN(stock)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error en el stock',
                    text: 'El stock debe ser un número mayor a 0.',
                    confirmButtonColor: '#d33'
                });
                return;
            }

            
            Swal.fire({
                icon: 'success',
                title: '¡Producto actualizado!',
                text: 'Los cambios fueron guardados exitosamente.',
                confirmButtonText: 'Aceptar',
                confirmButtonColor: '#28a745'
            }).then((result) => {
                if (result.isConfirmed) {
                   
                    this.submit();
                }
            });
        });
    };
</script>
