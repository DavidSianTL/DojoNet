@model Evaluacion_Mensual_Abril.Models.Producto

@{
    ViewData["Title"] = "Editar Producto";
}

<h2>Editar Producto</h2>

<form asp-action="Editar" id="formEditarProducto">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Nombre" class="control-label"></label>
        <input asp-for="Nombre" class="form-control" />
        <span asp-validation-for="Nombre" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Descripcion" class="control-label"></label>
        <input asp-for="Descripcion" class="form-control" />
        <span asp-validation-for="Descripcion" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Precio" class="control-label"></label>
        <input asp-for="Precio" class="form-control" />
        <span asp-validation-for="Precio" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Stock" class="control-label"></label>
        <input asp-for="Stock" class="form-control" />
        <span asp-validation-for="Stock" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Guardar" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
    </div>
</form>

@section Scripts {
   
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById("formEditarProducto").addEventListener("submit", function (e) {
            let nombre = document.querySelector("[name='Nombre']").value.trim();
            let descripcion = document.querySelector("[name='Descripcion']").value.trim();
            let precio = parseFloat(document.querySelector("[name='Precio']").value);
            let stock = parseInt(document.querySelector("[name='Stock']").value);

            let errores = [];

            const soloLetrasRegex = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/;

            // Validación Nombre
            if (nombre.length < 3 || nombre.length > 100) {
                errores.push("El nombre debe tener entre 3 y 100 caracteres.");
            } else if (!soloLetrasRegex.test(nombre)) {
                errores.push("El nombre solo debe contener letras y espacios.");
            }

            // Validación Descripción
            if (descripcion.length > 250) {
                errores.push("La descripción no debe exceder los 250 caracteres.");
            } else if (descripcion && !soloLetrasRegex.test(descripcion)) {
                errores.push("La descripción solo debe contener letras y espacios.");
            }

            // Validación Precio
            if (isNaN(precio) || precio <= 0) {
                errores.push("El precio debe ser un número mayor a 0.");
            }

            // Validación Stock
            if (isNaN(stock) || stock < 0 || !Number.isInteger(stock)) {
                errores.push("El stock debe ser un número entero mayor o igual a 0.");
            }

           
            if (errores.length > 0) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Errores en el formulario',
                    html: errores.join("<br/>"),
                    confirmButtonText: 'Aceptar'
                });
            }
        });
    </script>
}
