@model IEnumerable<Practica_JavaScript.Models.ProductosViewModel>
@{
	ViewData["Title"] = "Productos";
}

<div class="container-products">

	<aside class="sidebar">

		<ul>
			<li>
				<i class="fas fa-list"></i>
				<a href="@Url.Action("Productos", "Productos")">Ver Productos</a>
			</li>
			<li>
				<i class="fas fa-plus"></i>
				<a href="@Url.Action("Agregar", "Productos")">Agregar Producto</a>
			</li>
		</ul>


	</aside>

	<div class="section-products" id="productos">

		<h2 class="title-products">
			Productos
		</h2>

		<table id="productos-table" class="table table-striped table-bordered table-hover display responsive nowrap" width="100%">
			<thead class="">
				<tr>
					<th>Código</th>
					<th>Producto</th>
					<th>Precio</th>
					<th>Talla</th>
					<th>Color</th>
					<th>Marca</th>
					<th>Stock</th>
					<th>Descripción</th>
					<th>Acciones</th>
				</tr>
			</thead>
			<tbody >

				@if (Model == null || !Model.Any()) // Evitamos el error de "Model es null"
				{
					<tr>
						<td colspan="12" class="text-center">No hay registros</td>
					</tr>
				}
				else
				{
					@foreach (var producto in Model)
					{

						<tr>
							<td>@producto.Codigo</td>
							<td>@producto.NombreProducto</td>
							<td>@producto.Precio.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("es-GT"))</td>
							<td>@producto.Talla</td>
							<td>@producto.Color</td>
							<td>@producto.Marca</td>
							<td>@producto.Stock</td>
							<td>@producto.Descripcion</td>
							<td>
								<button class="btn btn-warning">
									<a href="@Url.Action("Editar", "Productos", new { id = producto.Codigo })">Editar</a>
									<i class="fas fa-pen"></i>
								</button>
								<button class="btn btn-danger" onclick="mostrarAlertaEliminar(@producto.Codigo)">
									Eliminar
									<i class="fas fa-delete-left"></i> 
								</button>
							</td>
						</tr>
					}
				}
				
			</tbody>
		</table>
	</div>

</div>


<script src="~/js/sweetAlerts.js" asp-append-version="true"></script>
<script>

	function mostrarAlertaEliminar(codigo) {
		Swal.fire({
			title: '¿Estás seguro?',
			text: "No podrás revertir esta acción.",
			icon: 'warning',
			showCancelButton: true,
			confirmButtonText: 'Sí, eliminar',
			cancelButtonText: 'Cancelar',
			customClass: {
				confirmButton: 'btn-confirm', // Clase personalizada para el botón "Aceptar"
				cancelButton: 'btn-cancel'   // Clase personalizada para el botón "Cancelar"
			},
			buttonsStyling: false // Desactiva los estilos predeterminados de SweetAlert2
		}).then((result) => {
			if (result.isConfirmed) {
				// Redirige a la acción de eliminación en el controlador
				window.location.href = `/Productos/EliminarProducto/${codigo}`;
			}
		});
	}

	var sesionActiva = sessionStorage.getItem('sesionActiva');

	if (!sesionActiva || sesionActiva !== 'true') {
		// Borra sesión en el servidor si querés
		window.location.href =  '@Url.Action("Login", "Login")';
	}

	var nombreSesion = '@(Context.Session.GetString("UsrNombre"))';

	if (!nombreSesion || nombreSesion === '' || nombreSesion === 'null' || nombreSesion === 'undefined') {
		window.location.href = '@Url.Action("Login", "Login")';
	}

</script>